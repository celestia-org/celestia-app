# Simple usage with a mounted data directory:
# > docker build -t celestia-app .
# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.celestia-appd:/root/.celestia-appd -v ~/.celestia-appcli:/root/.celestia-appcli celestia-app celestia-appd init
# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.celestia-appd:/root/.celestia-appd -v ~/.celestia-appcli:/root/.celestia-appcli celestia-app celestia-appd start
FROM docker.io/golang:1.19.7-alpine3.17 AS build-env

# Set up dependencies
ENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python3

# Set working directory for the build
WORKDIR /go/src/github.com/celestiaorg/celestia-app

# Add source files
COPY . .

# Install minimum necessary dependencies, build Cosmos SDK, remove packages
RUN apk add --no-cache $PACKAGES && \
    make install

# Final image
FROM docker.io/alpine:3.17.3

# Install ca-certificates
RUN apk add --no-cache --update ca-certificates
WORKDIR /root

# Copy over binaries from the build-env
COPY --from=build-env /go/bin/celestia-appd /usr/bin/celestia-appd

COPY ./scripts/single-node.sh .

EXPOSE 26657

RUN adduser -D -u 1000 celestia \
    && chown -R celestia:celestia /opt

USER celestia

ENTRYPOINT [ "./single-node.sh" ]
# NOTE: to run this image, docker run -d -p 26657:26657 ./single-node.sh {{chain_id}} {{genesis_account}}
