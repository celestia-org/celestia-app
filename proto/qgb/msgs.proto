syntax = "proto3";
package qgb;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/qgb/types";

// Msg defines the state transitions possible for QGB
service Msg {
  // ValsetConfirm allows the validators to submit their signatures over the validator set.
  rpc ValsetConfirm(MsgValsetConfirm) returns (MsgValsetConfirmResponse) {
    option (google.api.http).post = "/qgb/valset_confirm";
  }
  // DataCommitmentConfirm allows the validators to submit a confirmation for a data commitment.
  rpc DataCommitmentConfirm(MsgDataCommitmentConfirm) returns (MsgDataCommitmentConfirmResponse) {
    option (google.api.http).post = "/qgb/data_commitment_confirm";
  }
}

// MsgValsetConfirm
// this is the message sent by the validators when they wish to submit their
// signatures over the validator set at a given block height. A validator must
// first call MsgSetEthAddress to set their Ethereum address to be used for
// signing. Then someone (anyone) must make a ValsetRequest, the request is
// essentially a messaging mechanism to determine which block all validators
// should submit signatures over. Finally validators sign the validator set,
// powers, and Ethereum addresses of the entire validator set at the height of a
// ValsetRequest and submit that signature with this message.
//
// If a sufficient number of validators (66% of voting power) (A) have set
// Ethereum addresses and (B) submit ValsetConfirm messages with their
// signatures it is then possible for anyone to view these signatures in the
// chain store and submit them to Ethereum to update the validator set
// -------------
message MsgValsetConfirm {
  uint64 nonce        = 1;
  string orchestrator = 2;
  string eth_address  = 3;
  string signature    = 4;
}

// MsgValsetConfirmResponse describes the response returned after the submission
// of a MsgValsetConfirm.
message MsgValsetConfirmResponse {}

// MsgDataCommitmentConfirm describes a data commitment for a set of blocks.
message MsgDataCommitmentConfirm {}

// MsgValsetConfirmResponse describes the response returned after the submission
// of a MsgDataCommitmentConfirm.
message MsgDataCommitmentConfirmResponse {}
