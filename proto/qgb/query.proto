syntax = "proto3";
package qgb;

import "qgb/genesis.proto";
import "qgb/types.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "qgb/msgs.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/celestiaorg/celestia-app/x/qgb/types";

// Query defines the gRPC querier service.
service Query {
  // Params Queries the current parameters for the qgb module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/qgb/params";
  }

  // DataCommitmentConfirm Queries the data commitment confirm by the commitment
  // and the validator address
  rpc DataCommitmentConfirm(QueryDataCommitmentConfirmRequest)
      returns (QueryDataCommitmentConfirmResponse) {
    option (google.api.http).get = "/qgb/data_commitment/confirm/address/"
                                   "{address}/commitment/{commitment}";
  }
  // DataCommitmentConfirmsByValidator Queries data commitment confirms by
  // validator address
  rpc DataCommitmentConfirmsByValidator(
      QueryDataCommitmentConfirmsByValidatorRequest)
      returns (QueryDataCommitmentConfirmsByValidatorResponse) {
    option (google.api.http).get =
        "/qgb/data_commitment/confirms/address/{address}";
  }
  // DataCommitmentConfirms Queries data commitment confirms by the actual
  // commitment
  rpc DataCommitmentConfirmsByCommitment(
      QueryDataCommitmentConfirmsByCommitmentRequest)
      returns (QueryDataCommitmentConfirmsByCommitmentResponse) {
    option (google.api.http).get =
        "/qgb/data_commitment/confirms/commitment/{commitment}";
  }
  // DataCommitmentConfirmsByRange Queries data commitment confirms by a block
  // range
  rpc DataCommitmentConfirmsByRange(QueryDataCommitmentConfirmsByRangeRequest)
      returns (QueryDataCommitmentConfirmsByRangeResponse) {
    option (google.api.http).get = "/qgb/data_commitment/confirms/begin_block/"
                                   "{begin_block}/end_block/{end_block}";
  }
  // LastValsetRequests queries for the latest valset requests
  rpc LastValsetRequests(QueryLastValsetRequestsRequest)
      returns (QueryLastValsetRequestsResponse) {
    option (google.api.http).get = "/qgb/valset/requests";
  }
  // LastValsetRequests queries for the latest valset requests
  rpc ValsetRequestByNonce(QueryValsetRequestByNonceRequest)
      returns (QueryValsetRequestByNonceResponse) {
    option (google.api.http).get = "/qgb/valset/requests/{nonce}";
  }
  // ValsetConfirm Queries ValSetConfirm
  rpc ValsetConfirm(QueryValsetConfirmRequest)
      returns (QueryValsetConfirmResponse) {
    option (google.api.http).get = "/qgb/valset/confirm";
  }
  // ValsetConfirmsByNonce
  rpc ValsetConfirmsByNonce(QueryValsetConfirmsByNonceRequest)
      returns (QueryValsetConfirmsByNonceResponse) {
    option (google.api.http).get = "/qgb/confirms/{nonce}";
  }
  // this line is used by starport scaffolding # 2
}

// QueryLastValsetRequestsRequest
message QueryLastValsetRequestsRequest {}

// QueryLastValsetRequestsResponse
message QueryLastValsetRequestsResponse {
  repeated Valset valsets = 1 [ (gogoproto.nullable) = false ];
}

// QueryValsetRequestByNonceRequest
message QueryValsetRequestByNonceRequest { uint64 nonce = 1; }

// QueryValsetRequestByNonceResponse
message QueryValsetRequestByNonceResponse { Valset valset = 1; }

// QueryParamsRequest
message QueryParamsRequest {}
// QueryParamsResponse
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryValsetConfirmsByNonceRequest
message QueryValsetConfirmsByNonceRequest { uint64 nonce = 1; }

// QueryValsetConfirmsByNonceResponse
message QueryValsetConfirmsByNonceResponse {
  repeated MsgValsetConfirm confirms = 1 [ (gogoproto.nullable) = false ];
}

// QueryValsetConfirmRequest ValSet confirm query request
message QueryValsetConfirmRequest {
  uint64 nonce = 1;
  string address = 2;
}

// QueryValsetConfirmResponse ValSet confirm query response
message QueryValsetConfirmResponse { MsgValsetConfirm confirm = 1; }

// QueryDataCommitmentConfirmsRequest Data commitment confirm by commitment and
// validator address request
message QueryDataCommitmentConfirmRequest {
  string commitment = 1;
  string address = 2;
}

// QueryDataCommitmentConfirmsResponse Data commitment confirm by commitment and
// validator address response
message QueryDataCommitmentConfirmResponse {
  MsgDataCommitmentConfirm confirm = 1;
}

// QueryDataCommitmentConfirmsRequest Data commitment confirms by commitment
// request
message QueryDataCommitmentConfirmsByCommitmentRequest {
  string commitment = 1;
}

// QueryDataCommitmentConfirmsResponse Data commitment confirms by commitment
// response
message QueryDataCommitmentConfirmsByCommitmentResponse {
  repeated MsgDataCommitmentConfirm confirms = 1
      [ (gogoproto.nullable) = false ];
}

// QueryDataCommitmentConfirmsByRangeRequest Data commitment confirms by range
// request
message QueryDataCommitmentConfirmsByRangeRequest {
  int64 begin_block = 1;
  int64 end_block = 2;
}

// QueryDataCommitmentConfirmsByRangeResponse Data commitment confirms by range
// response
message QueryDataCommitmentConfirmsByRangeResponse {
  repeated MsgDataCommitmentConfirm confirms = 1
      [ (gogoproto.nullable) = false ];
}

// QueryDataCommitmentConfirmsByValidatorRequest Data commitment confirms by
// validator address request
message QueryDataCommitmentConfirmsByValidatorRequest { string address = 1; }

// QueryDataCommitmentConfirmsByValidatorResponse Data commitment confirms by
// validator address response
message QueryDataCommitmentConfirmsByValidatorResponse {
  repeated MsgDataCommitmentConfirm confirms = 1
      [ (gogoproto.nullable) = false ];
}
// this line is used by starport scaffolding # 3
